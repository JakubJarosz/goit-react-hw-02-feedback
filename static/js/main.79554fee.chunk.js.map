{"version":3,"sources":["components/Statistic/Statistic.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Statistic","_this$props","this","props","good","neutral","bad","total","positivePercentage","react_default","a","createElement","React","Component","FeedbackOptions","options","onLeaveFeedback","style","display","onClick","Section","title","children","Notification","message","Feedback","state","incrementStateField","stateField","_this","setState","Object","objectSpread","defineProperty","countTotalFeedback","_this$state","countPositiveFeedbackPercentage","toFixed","_this$state2","keys","components_Section_Section","components_FeedbackOptions_FeedbackOptions","components_Statistic_Statistic","components_Notification_Notification","App","height","justifyContent","alignItems","fontSize","color","components_Feedback_Feedback","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.79554fee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Statistic extends React.Component {\r\n   \r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props\r\n        return (\r\n            <div>   \r\n                \r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive feedback: {positivePercentage}%</p>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default Statistic","import React from \"react\";\r\n\r\n\r\nclass FeedbackOptions extends React.Component {\r\n    render() {\r\n        const {options, onLeaveFeedback} = this.props;\r\n        return (\r\n            <div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <button onClick={() => {onLeaveFeedback(options[0])}}>Good</button>\r\n                    <button onClick={() => {\r\n                        onLeaveFeedback(options[1])\r\n                    }}>Neutral</button>\r\n                    <button onClick={() => {\r\n                        onLeaveFeedback(options[2])\r\n                    }}>Bad</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default FeedbackOptions","import React from \"react\";\r\n\r\n\r\nclass Section extends React.Component {\r\n    render() {\r\n        const { title, children} = this.props;\r\n        return (\r\n            <div>\r\n                <h3>{title}</h3> \r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default Section","import React from \"react\";\r\n\r\n\r\nclass Notification extends React.Component {\r\n    render() {\r\n        const {message} = this.props;\r\n        return (\r\n            <p>{message}</p>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default Notification","import React from \"react\";\r\nimport Statistic from \"../Statistic/Statistic\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"../Section/Section\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nclass Feedback extends React.Component {\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n    incrementStateField = stateField => {\r\n        this.setState({ ...this.state, [stateField]: this.state[stateField] + 1 })\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state\r\n        return good + bad + neutral\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        return this.countTotalFeedback() > 0 ? ((this.state.good / this.countTotalFeedback()) * 100).toFixed(2) : 0;\r\n    }\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        const options = Object.keys(this.state);\r\n        return (\r\n            <div>\r\n                <Section title=\"Please leave feedback\">\r\n                <FeedbackOptions\r\n                    options={options}\r\n                    onLeaveFeedback={this.incrementStateField}\r\n                    />\r\n                </Section>\r\n                {this.countTotalFeedback() > 0 ? (<Section title=\"Statistics\">\r\n                <Statistic\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={this.countTotalFeedback()}\r\n                    positivePercentage={this.countPositiveFeedbackPercentage()}\r\n                    />\r\n                </Section>) : (<Notification message={\"There is no feedback\"}/>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default Feedback","\nimport React from 'react';\nimport Feedback from './components/Feedback/Feedback';\n\nexport const App = () => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '50px',\n        color: '#010101',\n      }}>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}